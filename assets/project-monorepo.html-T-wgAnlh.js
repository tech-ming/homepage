import{_ as i,c as a,e as n,o as e}from"./app-B8BGUnPD.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="monorepo项目管理实践" tabindex="-1"><a class="header-anchor" href="#monorepo项目管理实践"><span>Monorepo项目管理实践</span></a></h1><h2 id="什么是monorepo" tabindex="-1"><a class="header-anchor" href="#什么是monorepo"><span>什么是Monorepo</span></a></h2><p>Monorepo是一种项目管理策略，使用单一代码仓库来管理多个packages，便于复用组件、工具函数、类型声明和样式，同时保持各模块的独立性。</p><h2 id="主要优势" tabindex="-1"><a class="header-anchor" href="#主要优势"><span>主要优势</span></a></h2><ul><li><strong>代码共享</strong>：更容易共享和复用代码</li><li><strong>依赖管理</strong>：统一管理所有项目的依赖，避免版本冲突</li><li><strong>原子提交</strong>：可以在一次提交中更新多个相关项目</li><li><strong>统一构建</strong>：使用相同的构建流程和工具链</li><li><strong>简化协作</strong>：团队成员可以更容易地了解和贡献到多个相关项目</li></ul><h2 id="常用工具" tabindex="-1"><a class="header-anchor" href="#常用工具"><span>常用工具</span></a></h2><ul><li><strong>PNPM</strong>：高效的包管理器，支持workspace功能</li><li><strong>Lerna</strong>：Monorepo管理工具，用于版本控制和发布</li></ul><h2 id="项目结构示例" tabindex="-1"><a class="header-anchor" href="#项目结构示例"><span>项目结构示例</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>monorepo-root/</span></span>
<span class="line"><span>├── packages/</span></span>
<span class="line"><span>│   ├── components/         # 共享组件库</span></span>
<span class="line"><span>│   ├── utils/              # 工具函数库</span></span>
<span class="line"><span>│   ├── hooks/              # 自定义Hooks库</span></span>
<span class="line"><span>│   ├── types/              # 类型定义库</span></span>
<span class="line"><span>│   └── styles/             # 样式库</span></span>
<span class="line"><span>├── apps/</span></span>
<span class="line"><span>│   ├── web/                # Web应用</span></span>
<span class="line"><span>│   ├── admin/              # 管理后台</span></span>
<span class="line"><span>│   └── mobile/             # 移动端应用</span></span>
<span class="line"><span>├── tools/                  # 构建工具和脚本</span></span>
<span class="line"><span>├── docs/                   # 项目文档</span></span>
<span class="line"><span>├── pnpm-workspace.yaml     # PNPM工作区配置</span></span>
<span class="line"><span>└── package.json            # 根项目配置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实践示例" tabindex="-1"><a class="header-anchor" href="#实践示例"><span>实践示例</span></a></h2><p>示例仓库: <a href="https://github.com/burc-li/pnpm-monorepo" target="_blank" rel="noopener noreferrer">https://github.com/burc-li/pnpm-monorepo</a></p><h2 id="pnpm工作区配置" tabindex="-1"><a class="header-anchor" href="#pnpm工作区配置"><span>PNPM工作区配置</span></a></h2><p>在根目录创建<code>pnpm-workspace.yaml</code>文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;packages/*&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;apps/*&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根目录<code>package.json</code>配置示例：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;root&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;private&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;workspaces&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;packages/*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;apps/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;bootstrap&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna bootstrap&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;clean&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna clean&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;build&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna run build&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna run dev --parallel&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna run test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;lint&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna run lint&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;release&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lerna publish&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;dependencies&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;lerna&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;^8.2.2&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;engines&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt;=16&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;pnpm&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt;=7&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="经验总结" tabindex="-1"><a class="header-anchor" href="#经验总结"><span>经验总结</span></a></h2><h3 id="vscode源代码管理配置" tabindex="-1"><a class="header-anchor" href="#vscode源代码管理配置"><span>VSCode源代码管理配置</span></a></h3><p>在VSCode中源代码管理面板可能无法显示apps下面的git仓库，添加<code>.vscode/settings.json</code>解决：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;git.autoRepositoryDetection&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;git.detectSubmodules&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;git.repositoryScanMaxDepth&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;git-graph.maxDepthOfRepoSearch&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="各项目权限管理方案" tabindex="-1"><a class="header-anchor" href="#各项目权限管理方案"><span>各项目权限管理方案</span></a></h3><p>为了更精细地控制各子项目的访问权限，可采用以下策略：</p><ol><li><strong>独立仓库模式</strong>：每个<code>apps</code>下的项目维护一个独立的git仓库，monorepo-root作为总的git进行整体控制</li><li><strong>Git子模块方式</strong>：使用Git Submodules将独立仓库集成到主仓库中</li><li><strong>权限分层控制</strong>： <ul><li>使用<code>.gitaccess</code>文件定义不同团队对不同packages的访问权限</li><li>利用CI/CD系统进行权限验证和构建隔离</li></ul></li></ol><h3 id="依赖管理最佳实践" tabindex="-1"><a class="header-anchor" href="#依赖管理最佳实践"><span>依赖管理最佳实践</span></a></h3><ol><li><strong>提升依赖</strong>：使用PNPM的依赖提升功能减少重复安装，添加<code>.npmrc</code>文件:<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>shamefully-hoist=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="📚-参考资源" tabindex="-1"><a class="header-anchor" href="#📚-参考资源"><span>📚 参考资源</span></a></h2><ul><li><a href="https://juejin.cn/post/7215886869199896637" target="_blank" rel="noopener noreferrer">精通 Monorepo 架构设计</a></li><li><a href="https://www.cnblogs.com/burc/p/18568326" target="_blank" rel="noopener noreferrer">vue3 + pnpm 打造一个 monorepo 项目</a></li><li><a href="https://segmentfault.com/a/1190000045216948#item-1-1" target="_blank" rel="noopener noreferrer">Monorepo：让你的项目脱胎换骨，既能代码复用，又能独立部署！</a></li><li><a href="https://pnpm.io/workspaces" target="_blank" rel="noopener noreferrer">PNPM 官方文档 - Workspaces</a></li><li><a href="https://turbo.build/repo" target="_blank" rel="noopener noreferrer">Turborepo 文档</a></li></ul>`,27)]))}const h=i(l,[["render",t]]),o=JSON.parse('{"path":"/posts/other/project-monorepo.html","title":"Monorepo项目管理实践","lang":"zh-CN","frontmatter":{"date":"2025-06-29T00:00:00.000Z","category":["工程化"],"tag":["monorepo","pnpm","项目管理"],"description":"Monorepo项目管理实践 什么是Monorepo Monorepo是一种项目管理策略，使用单一代码仓库来管理多个packages，便于复用组件、工具函数、类型声明和样式，同时保持各模块的独立性。 主要优势 代码共享：更容易共享和复用代码 依赖管理：统一管理所有项目的依赖，避免版本冲突 原子提交：可以在一次提交中更新多个相关项目 统一构建：使用相同的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Monorepo项目管理实践\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-29T07:26:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tech-ming\\",\\"url\\":\\"https://avatars.githubusercontent.com/u/108599517?s=96&v=4\\"}]}"],["meta",{"property":"og:url","content":"https://tech-ming.github.io/homepage/posts/other/project-monorepo.html"}],["meta",{"property":"og:title","content":"Monorepo项目管理实践"}],["meta",{"property":"og:description","content":"Monorepo项目管理实践 什么是Monorepo Monorepo是一种项目管理策略，使用单一代码仓库来管理多个packages，便于复用组件、工具函数、类型声明和样式，同时保持各模块的独立性。 主要优势 代码共享：更容易共享和复用代码 依赖管理：统一管理所有项目的依赖，避免版本冲突 原子提交：可以在一次提交中更新多个相关项目 统一构建：使用相同的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-29T07:26:53.000Z"}],["meta",{"property":"article:tag","content":"项目管理"}],["meta",{"property":"article:tag","content":"pnpm"}],["meta",{"property":"article:tag","content":"monorepo"}],["meta",{"property":"article:published_time","content":"2025-06-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-29T07:26:53.000Z"}]]},"git":{"createdTime":1751182013000,"updatedTime":1751182013000,"contributors":[{"name":"ming","username":"ming","email":"it.work.zhang@foxmail.com","commits":1,"url":"https://github.com/ming"}]},"readingTime":{"minutes":2.22,"words":667},"filePathRelative":"posts/other/project-monorepo.md","excerpt":"\\n<h2>什么是Monorepo</h2>\\n<p>Monorepo是一种项目管理策略，使用单一代码仓库来管理多个packages，便于复用组件、工具函数、类型声明和样式，同时保持各模块的独立性。</p>\\n<h2>主要优势</h2>\\n<ul>\\n<li><strong>代码共享</strong>：更容易共享和复用代码</li>\\n<li><strong>依赖管理</strong>：统一管理所有项目的依赖，避免版本冲突</li>\\n<li><strong>原子提交</strong>：可以在一次提交中更新多个相关项目</li>\\n<li><strong>统一构建</strong>：使用相同的构建流程和工具链</li>\\n<li><strong>简化协作</strong>：团队成员可以更容易地了解和贡献到多个相关项目</li>\\n</ul>","autoDesc":true}');export{h as comp,o as data};
